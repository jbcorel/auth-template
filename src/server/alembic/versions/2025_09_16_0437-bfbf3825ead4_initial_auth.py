"""Initial auth

Revision ID: bfbf3825ead4
Revises: 3429e343f5c1
Create Date: 2025-09-16 04:37:00.971978+00:00

"""

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "bfbf3825ead4"
down_revision: str | Sequence[str] | None = "3429e343f5c1"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_users',
        sa.Column('id', sa.Uuid(), nullable=False, comment='Уникальный идентификатор пользователя'),
        sa.Column(
            'type', 
            sa.String(), 
            nullable=False, 
            comment='Тип пользователя'
        ),
        sa.Column('name', sa.String(), nullable=False, comment='Имя пользователя'),
        sa.Column('email', sa.String(), nullable=False, comment='Электронная почта'),
        sa.Column('hashed_password', sa.String(), nullable=False, comment='Хэш пароля'),
        sa.Column('is_deleted', sa.Boolean(), server_default='false', nullable=False, comment='Пометка на удаление пользователя'),
        sa.Column('is_superuser', sa.Boolean(), nullable=False, comment='является ли пользователь администратором'),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Создан'),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Обновлен'),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_auth_users')),
        sa.UniqueConstraint('email', name=op.f('uq_auth_users_email')),
        schema='app',
        comment='Таблица авторизации пользователей'
    )
    op.create_table('association_department_user',
        sa.Column('user_id', sa.Uuid(), nullable=False, comment='Идентификатор пользователя'),
        sa.Column('department_id', sa.Uuid(), nullable=False, comment='Идентификатор филиала'),
        sa.ForeignKeyConstraint(
            ['department_id'], ['dim.departments.id'],
            name=op.f('fk_association_department_user_department_id_departments'), onupdate='CASCADE', ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['app.auth_users.id'],
            name=op.f('fk_association_department_user_user_id_users'), onupdate='CASCADE', ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('user_id', 'department_id', name=op.f('pk_association_department_user')),
        schema='app',
        comment='Таблица ассоциаций Пользователь - Филиал'
    )
    op.create_table('auth_tokens',
        sa.Column('token', sa.String(), nullable=False, comment='Токен авторизации'),
        sa.Column('client_ip', postgresql.INET(), nullable=False, comment='IP-Адрес владельца токена'),
        sa.Column('user_agent', sa.String(), nullable=False, comment='User-agent пользователя'),
        sa.Column('user_id', sa.Uuid(), nullable=False, comment='Идентификатор владельца токена'),
        sa.Column('expires', sa.DateTime(timezone=True), nullable=False, comment='Дата истечения токена'),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Создан'),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Обновлен'),
        sa.ForeignKeyConstraint(['user_id'], ['app.auth_users.id'], name=op.f('fk_auth_tokens_user_id_auth_users'), onupdate='CASCADE', ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('token', name=op.f('pk_auth_tokens')),
        schema='app',
        comment='Таблица с токенами авторизации'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    op.drop_table('auth_tokens', schema='app')
    op.drop_table('association_department_user', schema='app')
    op.drop_table('auth_users', schema='app')
    # ### end Alembic commands ###